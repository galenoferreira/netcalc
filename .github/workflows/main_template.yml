name: CI/CD Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  # Versões e Configurações
  GO_VERSION: '1.20'
  UBUNTU_VERSION: 'ubuntu-latest'
  
  # Git
  GIT_CONFIG:
    USER: "github-actions[bot]"
    EMAIL: "actions@github.com"
  
  # Autenticação
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    name: Build and Test
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ${{ env.UBUNTU_VERSION }}
    concurrency:
      group: ${{ github.workflow }}-verify-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  update-changelog:
    name: Update Changelog
    if: github.event_name == 'release'
    runs-on: ${{ env.UBUNTU_VERSION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ env.GIT_CONFIG.USER }}"
          git config user.email "${{ env.GIT_CONFIG.EMAIL }}"
          git checkout main

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Update Changelog
        run: |
          gh release view "${{ github.event.release.tag_name }}" \
            --json body \
            --jq .body > CHANGELOG.md

      - name: Commit Changes
        run: |
          git add CHANGELOG.md
          if ! git diff --staged --quiet; then
            git commit -m "docs: atualizar CHANGELOG para ${{ github.event.release.tag_name }}"
            git push origin main
          fi

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ env.UBUNTU_VERSION }}
    needs: build-and-test
    env:
      GITHUB_REPO: ${{ github.repository }}
      REP_DIR: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy
        run: |
          chmod +x ./deploy.py
          ./deploy.py \
            --build \
            --test \
            --commit "ci: implantação em produção" \
            --tag "release-${{ github.run_number }}"