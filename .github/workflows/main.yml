name: CI Pipeline - v.1.0
description: "Workflow to generate and automatically update CHANGELOG.md when a release is published"

on:
  release:
    types: [ published ]

permissions:
  contents: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  COMMIT_USER: "github-actions[bot]"
  COMMIT_EMAIL: "actions@github.com"

jobs:
  update-changelog:
    name: Update CHANGELOG
    runs-on: ubuntu-22.04
    timeout-minutes: 1

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ env.COMMIT_USER }}"
          git config user.email "${{ env.COMMIT_EMAIL }}"

          # Make sure we are on the correct branch (replace master if main)
          git fetch origin master
          git checkout master
          git pull origin master

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Generate and update CHANGELOG.md
        run: |
          TAG=${{ github.event.release.tag_name }}
          # Determine previous tag (if any)
          PREV_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+' | grep -v "$TAG" | head -n1 || echo "")
          # Header for this release
          echo "## ${TAG} - $(date -u +%Y-%m-%d)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          # Release notes body
          echo "**Release Notes:**" >> CHANGELOG.md
          gh release view "$TAG" --json body --jq .body | sed 's/^/  /' >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          # Commits since previous tag
          if [[ -n "$PREV_TAG" ]]; then
            echo "**Commits since ${PREV_TAG}:**" >> CHANGELOG.md
            git log "${PREV_TAG}...${TAG}" --pretty=format:"- %s (%an)" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push CHANGELOG updates
        run: |
          TAG=${{ github.event.release.tag_name }}
          git add CHANGELOG.md
          if ! git diff --staged --quiet; then
            git commit --author="Release Bot <noreply@github.com>" \
                       -m "docs(changelog): update CHANGELOG for ${TAG}"
            git push origin master
          else
            echo "No changes to commit"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  test-binaries:
    name: Test Binaries on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: update-changelog
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Install GitHub CLI
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install gh
          else
            sudo apt-get update && sudo apt-get install -y gh
          fi
      - name: Download release assets
        run: |
          TAG=${{ github.event.release.tag_name }}
          gh release download "$TAG" --pattern "bin/${{ matrix.os }}/*"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run binary tests
        shell: bash
        run: |
          # Adjust the path and test command as needed
          BINARY=$(ls bin/${{ matrix.os }}/* | head -n1)
          chmod +x "$BINARY"
          "$BINARY" --run-tests
